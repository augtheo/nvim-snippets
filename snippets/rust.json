{
  "Rust CP Base Template ": {
    "prefix": "base",
    "body": [
      "#[allow(unused_imports)]",
      "use std::cmp::{min,max};",
      "use std::io::{BufWriter, stdin, stdout, Write};",
      " ",
      "#[derive(Default)]",
      "struct Scanner {",
      "    buffer: Vec<String>",
      "}",
      "impl Scanner {",
      "    fn next<T: std::str::FromStr>(&mut self) -> T {",
      "        loop {",
      "            if let Some(token) = self.buffer.pop() {",
      "                return token.parse().ok().expect(\"Failed parse\");",
      "            }",
      "            let mut input = String::new();",
      "            stdin().read_line(&mut input).expect(\"Failed read\");",
      "            self.buffer = input.split_whitespace().rev().map(String::from).collect();",
      "        }",
      "    }",
      "}",
      " ",
      "fn main() {",
      "    let mut scan = Scanner::default();",
      "    let out = &mut BufWriter::new(stdout());",
      "",
      "    let t = scan.next::<usize>();",
      "",
      "    for _ in 0..t {",
      "        let n = scan.next::<usize>();",
      "",
      "        writeln!(out , \"{}\" , n).ok();",
      "    }",
      "    ",
      "}",
      ""
    ],
    "description": "Rust CP Base Template "
  }
}
